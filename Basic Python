I've been practicing Python in Tryhackme and will do this project on Ubuntu/THM virtual machine or VS Code.

Resources Used:
-https://www.virtualbox.org/wiki/Downloads
-https://ubuntu.com/#download
-https://www.python.org/downloads/
-https://tryhackme.com/room/pythonbasics
-https://code.visualstudio.com/
-Bro Code Data Types https://www.youtube.com/watch?v=LKFrQXaoSMQ

Environments Used:
-Ubuntu in Virtualbox
-VS Code

Started Ubuntu virtual machine and open a terminal. Type 'python3' to open python. Screenshots are provided. Sometimes I'll also use VS Code Python3 or THM virtual Machine.

Open Python https://imgur.com/UCgWic8


1. Print 'Hello World'

Print: Output the text 
Note: Make sure to add quotation marks!
Example 1: Typed print("Hello World") and it should show 'Hello World'
Example 2: Typed print("It's a rainy day") and it should show 'It's a rainy day'
https://imgur.com/cRAs0xQ
https://imgur.com/gDPT2wt


2. Mathematical Operators

We can code a calculator to use mathematical operators and comparison operators. 
Mathematical Operators: 
-Additon (+)
-Subtraction (-)
-Mulitiplication (*)
-Division (/)
-Modulus (%)
-Exponents (**)

Comparison Operators: 
-Greater Than (>)
-Less Than (<)
-Equal To (==)
-Not Equal To (!=)
-Greater Than or Equal to (>=)
-Less Than or Equal (<=)

Mathematical Operators Examples: Screenshot https://imgur.com/qeFretg
Example 1: Typed >>> print(100+50) and it should show 150 
Example 2: Typed >>> print(620-240) and it should show 380  
Example 3: Typed >>> print(78*2) and it should show 156  
Example 4: Typed >>> print(100/5) and it should show 20.0  
Example 5: Typed >>> print(30%6) and it should show 0  
Example 6: Typed >>> print(8**2) and it should show 64  

Comparison Operators Examples:
Typed b = 24, hit space, and typed r = 25. This will tell python what the letter associate with the number. It should look like this below. Screenshot: https://imgur.com/wfjLdwT
>>> b = 24
>>> r = 25
>>> print(b > r)
False
>>> print(b < r)
True
>>> print(b == r)
False
>>> print(b != r)
True
>>> print(b >= r)
False
>>> print(b <= r)
True


3. Variable and Data Types
Variables allow you to store and update data in a computer program. You have a variable name and store data to that name. Data Types is the type of data being stored in a variable.
>>> Food = "hot dog"
>>> Money = 24000

Data Types:
String - Used for combinations of characters, such as letters or symbols
Integer - Whole numbers
Float - Numbers that contain decimal points or for fractions
Boolean - Used for data that is restricted to True or False options
List - Series of different data types stored in a collection

Variable Examples: Screenshot https://imgur.com/hmZpBzw
>>> size = 9
>>> size = size + 1
>>> print(size)
10

Data Types Example: 

String: https://imgur.com/9scOz2Y
>>> food = "steak"
>>> print(f"My favorite food is {food}")
My favorite food is steak

String Concatenation: https://imgur.com/dXxcaN3
>>> age = 40
>>> print("You will be " + str(age) + " years old tomorrow")
You will be 40 years old tomorrow

other separate arguments: https://imgur.com/NFJ1TSr
>>> age = 40
>>> print("You will be", age, "years old tomorrow")
You will be 40 years old tomorrow

>>> age = 40
>>> print(f"You will be {age} years old tomorrow")
You will be 40 years old tomorrow

Integer: https://imgur.com/aAWQm1A
>>> players = 10
>>> print(f"There are {players} players in the basketball game")
There are 10 players in the basketball game

Float: https://imgur.com/yVfNcRi
>>> price = 100.99
>>> print(f"The price is ${price} for your groceries")
The price is $100.99 for your groceries

Boolean: https://imgur.com/9Njk80o
>>> running = True
>>> print(f"Is the Valorant game running: {running}")
Is the Valorant game running: True

list: https://imgur.com/VxGYsPT
>>> list1 = ["red", "blue", "black"]
>>> list2 = ["yellow", "orange", "grey"]
>>> print(list2)
['yellow', 'orange', 'grey']


4. Logical and Boolean Operators
Logical Operators are used in conditional statements such as if statements. Boolean operators are used to connect and compare relationships between statements. Like an if statement, conditions can be true or false.

Logical operation and operator
Equivalence: ==
Less than: <
Less than or equal to: <=
Greater than: >
Greater than or equal to: >=

Boolean operation and operator
Both conditions must be true for the statement to be true: 'AND'
Only one condition of the statement needs to be true: 'OR'
If a condition is the opposite of an argument: 'NOT'

Example 1:
temp = 60
if temp > 5 and temp < 100:
    print("The temperature is good")
else:
    print("The temperature is bad")

The output would show: The temperature is good
Screenshot: https://imgur.com/LpdFFXL

Example 2:
temp = 60
if temp <= 0 or temp >= 50:
    print("The temperature is bad")
else:
    print("The temperature is good")

The output would show: The temperature is bad
Screenshot: https://imgur.com/r4ySMho

Example 3: 
temp = 60
sunny = True
if temp <= 0 or temp >= 50:
    print("The temperature is bad")
else:
    print("The temperature is good")

if sunny:
    print("It is sunny outside")
else:
    print("It is cloudy outside")

The output would show: 
The temperature is bad
It is sunny outside
Screenshot: https://imgur.com/4AN53kL


5. Shipping Project: Introduction to If Statements, screenshot https://imgur.com/7lq4EQF
- If a customer spends over $60, they get free shipping.
- If a customer spends < $60, the shipping cost is $1.30 per kg of the baskets weight.

Print the customers total basket cost (including shipping).

customer_basket_cost = 50
customer_basket_weight = 30
shipping_cost = 1.3

if customer_basket_cost > 60:
  print("free shipping")
else:
  print(customer_basket_cost + customer_basket_weight * shipping_cost)

Result: 89.0


6. Loops
loops allow programs to iterate and perform actions a number of times. There are two types of loops, for and while loops.

While Loops: 
Execute some code while some condition remain true.

Example: Screenshot https://imgur.com/YV1bj5O
r = 1 
while r <= 15:
    print(r)
    r = r + 1

Output:
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

For Loops:
Execute a block of code a fixed number of times.

Example 1: Screenshot https://imgur.com/ZrpqpaB
Pokemon = ["Ash", "May", "Pikachu"]
for Poke in Pokemon:
    print(Poke)

Output:
Ash
May
Pikachu

Example 2: Screenshot https://imgur.com/KtZM5q7
for q in range(10):
  print(q)

Output:
0
1
2
3
4
5
6
7
8
9


7. Bitcoin Project: Introduction to Functions, screenshot https://imgur.com/j67EPS5
Function is a block of code that can be called at different places in your program.

- Create a function to convert Bitcoin to USD.
- If your Bitcoin falls below $30,000, print a message.

investment_in_bitcoin = 1.0
bitcoin_to_usd = 15000

def bitcoinToUSD(bitcoin_amount, bitcoin_value_usd):
  usd_value = 1.0 * bitcoin_to_usd
  return usd_value

investment_in_usd = bitcoinToUSD(investment_in_bitcoin, bitcoin_to_usd)
if investment_in_usd <= bitcoin_to_usd:
  print("Investment below $15,000! SELL!")
else:
  print("Investment above $15,000")

Output:
Investment below $15,000! SELL!


8. Files: Screenshot https://imgur.com/HObK8SY
You can read and write files in Python. You can open, create and write files, etc.

I created a file in a terminal in Unbuntu virtual Machine. Opened a terminal > Typed 'touch Secret' > Opened the file and typed 'You got me! Happy Monday'. Screenshot: https://imgur.com/DdZaX9s, https://imgur.com/mI1lil2

Example 1: Screenshot https://imgur.com/NNVFw9d
>>> f = open("secret", "r")
>>> print(f.read())
You got me! Happy Monday!

Example 2: Screenshot https://imgur.com/ZlUQ9Ak, https://imgur.com/ChFIk7J
Created two .py files named New.py and Surprise.py

In the New.py file
1  f = open("Surprise.py", "a")
2  f.write("Welcome to the party!")
3  f.close()

It will show "Welcome to the party!" message in the Surprise.py file.

Example 3: Screenshot https://imgur.com/85YP2Of, https://imgur.com/8CfyTVZ
In the New.py file
1  f = open("Deadpool.py", "w")
2  f.write("I bet you wondering how I got Wolverine back!")
3  f.close()

It will create the file named 'Deadpool.py' and write "I bet you wondering how I got Wolverine back!" message in the Deadpool.py file.


9. Imports
"In Python, we can import libraries, which are a collection of files that contain functions. Think of importing a library as importing functions you can use that have been already written for you."

Example:
1  import datetime
2  current_time = datetime.datetime.now()
3  print(current_time)

Output:
2024-02-13 09:59:29.232559





